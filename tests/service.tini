#!/bin/sh
#
#  Copyright (C) 2018-2019 GaÃ«l PORTAY
#
# SPDX-License-Identifier: LGPL-2.1-or-later
#

set -e

# Must be called with two arguments!
# The script to source and the action.
if [ $# -lt 2 ] || ! [ -e "$1" ]
then
	cat <<EOF
Usage: $0 SCRIPT start|stop [ARGS...]
EOF
	exit 1
fi >&2

__script="$1"
shift
__action="$1"
shift

PIDFILE="/run/tini/pid/${__script##*/}"

pre_start() { :; }
post_start() { :; }
pre_stop() { :; }
post_stop() { :; }

start() {
	if ! pre_start
	then
		echo -n "Abort! "
		return 1
	fi

	run_start "$@"
	
	if ! post_start
	then
		# TODO: Behavior is to be defined
		return 1
	fi
}

if ! command -v run_start >/dev/null
then
	run_start() {
		mkdir -p "${PIDFILE%/*}"
		"$@" &
		echo -n "$!" >"$PIDFILE"
	}
fi

stop() {
	if ! [ -e "$PIDFILE" ]
	then
		echo -n "$PIDFILE: No such pidfile! "
		return 1
	fi

	if ! pre_stop
	then
		echo -n "Abort! "
		return 1
	fi
	
	run_stop "$@"

	if ! post_stop
	then
		# TODO: Behavior is to be defined
		return 1
	fi
}

foreground() {
	if ! pre_start
	then
		echo -n "Abort! "
		return 1
	fi

	run_forground "$@"

	if ! post_start
	then
		# TODO: Behavior is to be defined
		return 1
	fi
}

if ! command -v run_foreground >/dev/null
then
	run_foreground() {
		"$@"
	}
fi

if ! command -v run_stop >/dev/null
then
	run_stop() {
		if ! [ -e "$PIDFILE" ]
		then
			echo "$PIDFILE: No such pidfile!"
			return 1
		fi

		/bin/kill -SIGKILL "$(cat "$PIDFILE")"
		rm -f "$PIDFILE"
	}
fi

if ! command -v run_status >/dev/null
then
	run_status() {
		if ! [ -e "$PIDFILE" ]
		then
			echo "$PIDFILE: No such pidfile!"
			return 1
		fi

		/sbin/status <"$PIDFILE"
	}
fi

# shellcheck disable=SC1090
. "$__script"

# If EXEC is unset, guess the executable from script name.
if [ -z "$EXEC" ]
then
	EXEC="$(command -v "${__script##*/}" || true)"
fi
# If EXEC is still unset, remove the two digit sequence number.
if [ -z "$EXEC" ]
then
	EXEC="${__script##*/}"
	EXEC="$(command -v "${EXEC:2}")"
fi

# If ARGS is set, replace all arguments.
if [ -n "$ARGS" ]
then
	set -f
	# shellcheck disable=SC2086
	set -- $ARGS
	set +f
fi

# If DESCRIPTION is unset, use EXEC.
if [ -z "$DESCRIPTION" ]
then
	DESCRIPTION="${EXEC##*/}"
fi

case "$__action" in
start)
	echo -n "starting $DESCRIPTION: " >&2
	if start "$EXEC" "$@"
	then
		echo "done" >&2
	else
		echo "failed (with rc $?)" >&2
	fi
	;;
stop)
	echo -n "stopping $DESCRIPTION: " >&2
	if stop "$@"
	then
		echo "done" >&2
	else
		echo "failed (with rc $?)" >&2
	fi
	;;
*)
	if command -v "run_$__action" >/dev/null
	then
		"run_$__action" "$EXEC" "$@"
		exit "$?"
	fi

	echo "Usage: ${__script##*/} start|stop|status|foreground [ARGS...]" >&2
	exit 1
	;;
esac
